{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.gaurd.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/contact-view/contact-view.component.css","webpack:///./src/app/contact-view/contact-view.component.html","webpack:///./src/app/contact-view/contact-view.component.ts","webpack:///./src/app/contactinfo.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit-contact-dialog/edit-contact-dialog.component.css","webpack:///./src/app/edit-contact-dialog/edit-contact-dialog.component.html","webpack:///./src/app/edit-contact-dialog/edit-contact-dialog.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/employee.contact.ts","webpack:///./src/app/newcontact/newcontact.component.css","webpack:///./src/app/newcontact/newcontact.component.html","webpack:///./src/app/newcontact/newcontact.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACE;AACY;AAC5B;AACzC,IAAM,SAAS,GAAW;IACtB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAkB;QAC5B,WAAW,EAAE,CAAC,qDAAS,CAAC;KAC5B;IACD;QACI,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,WAAW;KAC1B;CACF,CAAC;AAcJ;IAAA;IAEA,CAAC;IAFY,gBAAgB;QAZ5B,8DAAQ,CAAC;YACN,OAAO,EAAG;gBACN,4DAAY,CAAC,OAAO,CAChB,SAAS,CACZ;aACJ;YACD,OAAO,EAAG;gBACN,4DAAY;aACf;YACD,SAAS,EAAG,EACN;SACT,CAAC;OACW,gBAAgB,CAE5B;IAAD,uBAAC;CAAA;AAF4B;;;;;;;;;;;;ACjC7B,8BAA8B,4BAA4B,OAAO,qBAAqB,uBAAuB,OAAO,C;;;;;;;;;;;ACApH,wNAAwN,OAAO,6T;;;;;;;;;;;;;;;;;;;;;;;;;ACA7K;AACa;AAM/D;IAGE,sBAAoB,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;QAFrD,UAAK,GAAY,iBAAiB,CAAC;IAEoB,CAAC;IACxD,+BAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAZY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIgC,6EAAqB;OAH1C,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAC0B;AACpB;AACU;AACsB;AACpC;AACa;AACa;AACd;AACiB;AACK;AACpC;AACwD;AAqCtE;AAmG3B;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjGrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,iFAAkB;gBAClB,qFAAmB;gBACnB,0FAAoB;gBACpB,8GAA0B;aAC3B;YACD,OAAO,EAAE;gBACP,oEAAgB;gBAChB,4FAAuB;gBACvB,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU;gBACV,wEAAqB;gBACrB,iEAAc;gBACd,uEAAoB;gBACpB,kEAAe;gBACf,wEAAqB;gBACrB,gEAAa;gBACb,oEAAiB;gBACjB,iEAAc;gBACd,mEAAgB;gBAChB,sEAAmB;gBACnB,kEAAe;gBACf,mEAAgB;gBAChB,qEAAkB;gBAClB,oEAAiB;gBACjB,gEAAa;gBACb,iEAAc;gBACd,gEAAa;gBACb,gEAAa;gBACb,sEAAmB;gBACnB,qEAAkB;gBAClB,uEAAoB;gBACpB,2EAAwB;gBACxB,iEAAc;gBACd,kEAAe;gBACf,kEAAe;gBACf,mEAAgB;gBAChB,kEAAe;gBACf,uEAAoB;gBACpB,oEAAiB;gBACjB,gEAAa;gBACb,iEAAc;gBACd,gEAAa;gBACb,mEAAgB;gBAChB,mEAAgB;gBAChB,gEAAa;aACd;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,wEAAqB;gBACrB,iEAAc;gBACd,uEAAoB;gBACpB,kEAAe;gBACf,wEAAqB;gBACrB,gEAAa;gBACb,oEAAiB;gBACjB,iEAAc;gBACd,mEAAgB;gBAChB,sEAAmB;gBACnB,kEAAe;gBACf,mEAAgB;gBAChB,qEAAkB;gBAClB,oEAAiB;gBACjB,gEAAa;gBACb,iEAAc;gBACd,gEAAa;gBACb,gEAAa;gBACb,sEAAmB;gBACnB,qEAAkB;gBAClB,uEAAoB;gBACpB,2EAAwB;gBACxB,iEAAc;gBACd,kEAAe;gBACf,kEAAe;gBACf,mEAAgB;gBAChB,kEAAe;gBACf,uEAAoB;gBACpB,oEAAiB;gBACjB,gEAAa;gBACb,iEAAc;gBACd,gEAAa;gBACb,mEAAgB;gBAChB,mEAAgB;gBAChB,gEAAa;aAEd;YACD,eAAe,EAAE,CAAC,8GAA0B,CAAC;YAC7C,SAAS,EAAE,CAAC,sDAAS,CAAC;YACtB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACrJqB;AACwD;AAGnG;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtC,2BAA2B;YAC3B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAdQ,SAAS;QADrB,gEAAU,EAAE;yCAGmB,sDAAM;OAFzB,SAAS,CAerB;IAAD,gBAAC;CAAA;AAfqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJqB;AACN;AACA;AACI;AACU;AAInD;IAGE,+BAAoB,IAAS,EAAS,MAAc;QAAhC,SAAI,GAAJ,IAAI,CAAK;QAAS,WAAM,GAAN,MAAM,CAAQ;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAEzD,CAAC;IAED,gDAAgB,GAAhB,UAAiB,QAAkB;QACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAED,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;YACjF,IAAI,CACF,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CACnC,CAAC;IACJ,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEnC,CAAC;IAzBU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIyB,kDAAI,EAAiB,sDAAM;OAHzC,qBAAqB,CA0BjC;IAAD,4BAAC;CAAA;AA1BiC;;;;;;;;;;;;ACRlC,uBAAuB,sBAAsB,OAAO,mBAAmB,qBAAqB,yBAAyB,mBAAmB,sBAAsB,sBAAsB,2BAA2B,OAAO,kBAAkB,mBAAmB,kCAAkC,OAAO,iCAAiC,mBAAmB,OAAO,mBAAmB,oBAAoB,yBAAyB,OAAO,sCAAsC,sBAAsB,+BAA+B,OAAO,yCAAyC,oBAAoB,OAAO,sCAAsC,uBAAuB,sBAAsB,gCAAgC,gCAAgC,SAAS,+BAA+B,wBAAwB,SAAS,wBAAwB,kCAAkC,6BAA6B,4BAA4B,SAAS,OAAO,C;;;;;;;;;;;ACA36B,goBAAgoB,eAAe,kFAAkF,KAAK,+TAA+T,eAAe,iTAAiT,WAAW,oTAAoT,YAAY,6TAA6T,eAAe,iOAAiO,gcAAgc,2BAA2B,oP;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjnF;AACkB;AAC7B;AAEsC;AASlG;IAQE,8BAAoB,kBAAsC,EAAS,MAAiB;QAAhE,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAW;QAPpF,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAQvF,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,cAAI;YACxD,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IACD,0CAAW,GAAX,UAAY,OAAY;IAExB,CAAC;IACD,6CAAc,GAAd;QAAA,iBAiBC;QAhBC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE;aACrC,SAAS,CACR,cAAI;YACF,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAC3D,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC,EAAE,cAAc;QACjB,UADG,cAAc;QACjB,GAAG;YACD,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEP,2BAA2B;IAC7B,CAAC;IAED,4CAAa,GAAb,UAAc,EAAE;QAAhB,iBAUC;QARA,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAChD,cAAI;YACF,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,cAAc;QACjB,UADG,cAAc;QACjB,GAAG;YACD,oBAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,yCAAU,GAAV,UAAW,EAAE;QACX,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC;SACjD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAEvC,CAAC,CAAC,CAAC;IAGL,CAAC;IACD,0CAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAjEwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;2DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;sDAAC;IANvB,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAUwC,uEAAkB,EAAiB,2DAAS;OARzE,oBAAoB,CAuEhC;IAAD,2BAAC;CAAA;AAvEgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbU;AAEmB;AACX;AACd;AAErC,sBAAsB;AACtB,IAAM,SAAS,GAAG;IAChB,WAAW,EAAE,qBAAqB;IAClC,OAAO,EAAE,iBAAiB;CAC3B,CAAC;AAKF;IAQE,4BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,oDAAe,CAAC,iBAAiB,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC/D,CAAC;IACD,4CAAe,GAAf,UAAgB,GAAS;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IACD,2CAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5D,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CACnC,CAAC;IAEJ,CAAC;IACD,gBAAgB;IAChB,8CAAiB,GAAjB,UAAkB,WAAgC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CACnC,CAAC;IAEJ,CAAC;IAED,iBAAiB;IACjB,uCAAU,GAAV,UAAW,WAAgC;QACzC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACtE,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CACnC,CAAC;IACJ,CAAC;IACD,gBAAgB;IAChB,2CAAc,GAAd,UAAe,WAAkC;QAC/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IACD,eAAe;IACf,0CAAa,GAAb,UAAc,EAAU;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,IAAC,MAAI,EAAI,GAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClE,QAAQ;QACP,oCAAoC;QACrC,KAAK;IACN,CAAC;IACD,mBAAmB;IACnB,2CAAc,GAAd,UAAe,EAAU;QACvB,IAAI,YAAiC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,WAAW;YAE/B,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,YAAY,GAAG,WAAW,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IA/DU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAS0B,kDAAI;OARnB,kBAAkB,CAgE9B;IAAD,yBAAC;CAAA;AAhE8B;;;;;;;;;;;;ACf/B,mB;;;;;;;;;;;ACAA,ijB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACb;AAQrC;IAGE,4BAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAFrB,WAAM,GAAG,wBAAwB,CAAC;QAClC,WAAM,GAAG,wBAAwB,CAAC;IACT,CAAC;IAElC,qCAAQ,GAAR;IACA,CAAC;IANU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAIyB,kDAAI;OAHlB,kBAAkB,CAU9B;IAAD,yBAAC;CAAA;AAV8B;;;;;;;;;;;;ACT/B,mB;;;;;;;;;;;ACAA,q5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AACG;AACJ;AAC+B;AACvB;AAQhE;IAKE,oCAAoB,kBAAsC,EAAS,SAAmD,EACpF,IAAyB;QADvC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAS,cAAS,GAAT,SAAS,CAA0C;QACpF,SAAI,GAAJ,IAAI,CAAqB;QACzD,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1C,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1C,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,CAAC;YAClC,mCAAmC;YACnC,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,MAAM,CAAC;SACrC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;mCAhBU,0BAA0B;IAkBrC,6CAAQ,GAAR;IACA,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,kBAAkB;IAClB,sDAAiB,GAAjB,UAAkB,OAA4B;QAA9C,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CAC1D,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;gBACrC,KAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEhD,CAAC,EAAE,cAAc;YACjB,UADG,cAAc;YACjB,GAAG;gBACD,oBAAoB;gBACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;YAAA,CAAC;QAER,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;IAEtE,CAAC;IACD,8BAA8B;IAC9B,0DAAqB,GAArB,UAAsB,cAAmC;QACvD,IAAI,QAAQ,GAAY,KAAK,CAAC;QAC9B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACrC,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrD,QAAQ,GAAG,IAAI,CAAC;gBAClB,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAxDU,0BAA0B;QANtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;YAGnC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,qEAAmB,EAAE,WAAW,EAAE,4BAA0B,EAAE,CAAC;SACvF,CAAC;QAOG,uEAAM,CAAC,iEAAe,CAAC;yCADc,uEAAkB,EAAoB,8DAAY;YAClD,2EAAmB;OANhD,0BAA0B,CA0DtC;IAAD,iCAAC;;CAAA;AA1DsC;;;;;;;;;;;;ACZvC,wCAAwC,sBAAsB,+BAA+B,OAAO,kCAAkC,oBAAoB,OAAO,6BAA6B,oBAAoB,OAAO,2BAA2B,oBAAoB,OAAO,iBAAiB,8BAA8B,OAAO,6BAA6B,oBAAoB,2BAA2B,QAAQ,sCAAsC,yBAAyB,sBAAsB,8BAA8B,UAAU,OAAO,sCAAsC,yBAAyB,sBAAsB,8BAA8B,UAAU,OAAO,C;;;;;;;;;;;ACAjqB,k2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACO;AACR;AACW;AAOnE;IAIE,wBAAoB,KAAqB,EAC/B,MAAc,EACd,WAAiC;QAFvB,UAAK,GAAL,KAAK,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAsB;QAJ3C,YAAO,GAAG,KAAK,CAAC;QAKZ,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpD,CAAC,CAAC;QACP,mBAAmB;IACnB,CAAC;uBAZU,cAAc;IAczB,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,YAAY,CAAC;IAChF,CAAC;IAED,qCAAY,GAAZ,UAAa,SAAS;QAAtB,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CACrE,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC1B,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC;YACD,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,EACD,eAAK;YACF,kCAAkC;YAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACxB,CAAC,CACA,CAAC;IACJ,CAAC;IAED,wCAAe,GAAf;QACE,MAAM,CAAC,mBAAmB,CAAC;IAC7B,CAAC;IA1CU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,qEAAmB,EAAE,WAAW,EAAE,gBAAc,EAAE,CAAC;SAC3E,CAAC;yCAK2B,8DAAc;YACvB,sDAAM;YACF,6EAAqB;OANhC,cAAc,CA4C1B;IAAD,qBAAC;;CAAA;AA5C0B;;;;;;;;;;;;;;ACX3B;AAAA;IAQI,6BAAY,EAAO,EACf,SAAiB,EACjB,QAAgB,EAChB,KAAa,EACb,SAAiB,EACjB,MAAc;QACd,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAGL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;ACvBD,sCAAsC,uBAAuB,+BAA+B,OAAO,oCAAoC,oBAAoB,OAAO,2BAA2B,oBAAoB,OAAO,sCAAsC,+BAA+B,gCAAgC,UAAU,OAAO,M;;;;;;;;;;;ACA9U,gyD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACoC;AAC1B;AACd;AAS9C;IAEE,6BAAoB,kBAAsC,EAAQ,QAAqB;QAAnE,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAQ,aAAQ,GAAR,QAAQ,CAAa;QACrF,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnI,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACnD,CAAC,CAAC;IACJ,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,wCAAU,GAAV,UAAW,UAAU;QAArB,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAErC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YACxD,KAAI,CAAC,YAAY,CAAC,mBAAmB,EAAC,IAAI,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,0CAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YAClC,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IA9BU,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAIwC,uEAAkB,EAAkB,6DAAW;OAF5E,mBAAmB,CA+B/B;IAAD,0BAAC;CAAA;AA/B+B;;;;;;;;;;;;;;ACZhC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACdnE;AAAA,uBAAuB;AACwB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AuthGuard } from './auth.gaurd';\r\nconst appRoutes: Routes = [\r\n    {\r\n      path: 'login',\r\n      component: LoginComponent\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n         canActivate: [AuthGuard] \r\n    },\r\n    { \r\n        path: '**',\r\n        redirectTo: 'dashboard' \r\n    }\r\n  ];\r\n  \r\n@NgModule({\r\n    imports : [\r\n        RouterModule.forRoot(\r\n            appRoutes\r\n        )\r\n    ],\r\n    exports : [\r\n        RouterModule\r\n    ],\r\n    providers : [\r\n         ]\r\n})\r\nexport class AppRoutingModule{\r\n\r\n}\r\n\r\n","module.exports = \".logout-btn{\\r\\n        padding: 0 14px;  \\r\\n}\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n    \\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n   \\r\\n   <mat-toolbar-row>\\r\\n      <span>{{title}} </span>\\r\\n      <span class=\\\"example-spacer\\\"></span>\\r\\n      <button class=\\\"logout-btn\\\" *ngIf=\\\"loginStatus\\\" mat-raised-button (click)=\\\"logout()\\\" color=\\\"warn\\\">Logout</button>\\r\\n     \\r\\n    </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div>\\r\\n <router-outlet></router-outlet>\\r\\n</div>\"","import { Component , OnInit} from '@angular/core';\r\nimport {AuthenticationService} from './authentication.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title : string = 'Contact Manager';\r\n  loginStatus : boolean;\r\n  constructor(private authService:AuthenticationService){}\r\n  ngOnInit() {\r\n    this.authService.authStatus.subscribe((data)=>{\r\n      console.log(data);\r\n      this.loginStatus = data;\r\n    });\r\n  }\r\n  logout(){\r\n    this.authService.logout();\r\n}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NewcontactComponent } from './newcontact/newcontact.component';\r\nimport { ContactViewComponent } from './contact-view/contact-view.component';\r\nimport { AuthGuard } from './auth.gaurd';\r\nimport { EditContactDialogComponent } from './edit-contact-dialog/edit-contact-dialog.component';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    NewcontactComponent,\r\n    ContactViewComponent,\r\n    EditContactDialogComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n\r\n  ],\r\n  entryComponents: [EditContactDialogComponent],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n \r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n \r\n    constructor(private router: Router) { }\r\n \r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            console.log(\"canActivate\");\r\n            return true;\r\n        }\r\n \r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Observable , BehaviorSubject} from \"rxjs\";\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  updateAuthStatus : BehaviorSubject<boolean>;\r\n  authStatus : Observable<boolean>;\r\n  constructor(private http:Http,private router: Router) {\r\n    this.updateAuthStatus = new BehaviorSubject(false);\r\n    this.authStatus = this.updateAuthStatus.asObservable();\r\n   \r\n  }\r\n\r\n  changeAuthStatus(authFlag : boolean){\r\n    this.updateAuthStatus.next(authFlag);\r\n  }\r\n\r\n  login(username: string, password: string){\r\n    return this.http.post('/api/v1/auth', { username: username, password: password }).\r\n    pipe(\r\n      map((res: Response) => res.json()),\r\n    );\r\n  }\r\n\r\n  logout(){\r\n    this.changeAuthStatus(false);\r\n    localStorage.removeItem('currentUser');\r\n    this.router.navigate([\"/login\"]);\r\n\r\n  }\r\n}\r\n","module.exports = \"div {\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  input {\\r\\n    border: none;\\r\\n    background: none;\\r\\n    padding: 0;\\r\\n    outline: none;\\r\\n    font: inherit;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  span {\\r\\n    opacity: 0;\\r\\n    transition: opacity 200ms;\\r\\n  }\\r\\n  \\r\\n  :host.floating span {\\r\\n    opacity: 1;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    width: 100%;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n  \\r\\n  .econtact-view-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .contact-view-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  @media(max-width: 600px) {\\r\\n    .mobile-label {\\r\\n      width: 80px;\\r\\n      display: inline-block;\\r\\n          font-weight: bold;\\r\\n    }\\r\\n  \\r\\n    .mat-header-row {\\r\\n      display: none;\\r\\n    }\\r\\n  \\r\\n    .mat-row { \\r\\n      flex-direction: column;\\r\\n      align-items: start;\\r\\n      padding: 8px 24px;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"contact-view-container mat-elevation-z8\\\">\\r\\n  <mat-card>\\r\\n\\r\\n    <mat-card-title>\\r\\n\\r\\n    </mat-card-title>\\r\\n    <mat-form-field>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n          <!-- ID Column -->\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row; let i = index;\\\">\\r\\n                <span class=\\\"mobile-label\\\">ID:</span>\\r\\n              {{i+1}}\\r\\n               </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Name Column -->\\r\\n          <ng-container matColumnDef=\\\"Name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"mobile-label\\\">Name:</span> {{row.firstName}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Color Column -->\\r\\n          <ng-container matColumnDef=\\\"Email\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"mobile-label\\\">Email:</span> {{row.email}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Color Column -->\\r\\n          <ng-container matColumnDef=\\\"Status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"mobile-label\\\">Status:</span> {{row.status}} </td>\\r\\n          </ng-container>\\r\\n          <!-- Color Column -->\\r\\n          <ng-container matColumnDef=\\\"Contact No\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact No. </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"mobile-label\\\">Contact No:</span> {{row.contactNo}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row;  \\\">\\r\\n                <span class=\\\"mobile-label\\\">Action</span>\\r\\n              <button mat-raised-button (click)=\\\"removeContact(row._id['$oid'])\\\">Delete </button>\\r\\n              <button mat-raised-button (click)=\\\"updateContact(row._id['$oid'])\\\">Edit </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[ 10, 25, 100]\\\"></mat-paginator>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit, ViewChild, OnChanges} from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { ContactinfoService } from '../contactinfo.service';\r\nimport { EmployeeContactData } from '../model/employee.contact';\r\nimport { EditContactDialogComponent } from '../edit-contact-dialog/edit-contact-dialog.component';\r\n\r\nimport { Observable } from \"rxjs\";\r\n@Component({\r\n  selector: 'app-contact-view',\r\n  templateUrl: './contact-view.component.html',\r\n  styleUrls: ['./contact-view.component.css']\r\n})\r\n\r\nexport class ContactViewComponent implements OnInit, OnChanges {\r\n  displayedColumns: string[] = ['id', 'Name', 'Email', 'Contact No', 'Status', 'Action'];\r\n  dataSource: MatTableDataSource<EmployeeContactData>;\r\n  contactInfo: EmployeeContactData[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private contactInfoService: ContactinfoService, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contactInfoService.contactListObserver.subscribe(data => {\r\n      this.getContactInfo();\r\n    })   \r\n  }\r\n  ngOnChanges(changes: any) {\r\n\r\n  }\r\n  getContactInfo(): void {\r\n    this.contactInfoService.getContactInfo()\r\n      .subscribe(\r\n        data => {\r\n          this.contactInfo = data;\r\n          console.log(data);\r\n          this.dataSource = new MatTableDataSource(this.contactInfo);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.contactInfoService.setContactInfo(this.contactInfo);\r\n        }, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n\r\n    // return this.contactInfo;\r\n  }\r\n\r\n  removeContact(id): void {\r\n    \r\n   this.contactInfoService.deleteContact(id).subscribe(\r\n      data => {       \r\n        this.getContactInfo();\r\n      }, //Bind to view\r\n      err => {\r\n        // Log errors if any\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  updateContact(id): void {\r\n    this.openDialog(id);\r\n  }\r\n\r\n  openDialog(id): void {\r\n    const dialogRef = this.dialog.open(EditContactDialogComponent, {\r\n      width: '700px',\r\n      height: '300px',\r\n      data: this.contactInfoService.getContactById(id)\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n\r\n    });\r\n\r\n\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EmployeeContactData } from './model/employee.contact'\r\nimport { Http, RequestOptions, Headers } from '@angular/http';\r\nimport { Observable , BehaviorSubject} from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\n\r\n//All URL's for server\r\nconst endpoints = {\r\n  contactList: \"/api/v1/contactlist\",\r\n  contact: \"/api/v1/contact\"\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactinfoService {\r\n  contactInfo: EmployeeContactData[];\r\n  headers: Headers;\r\n  options: RequestOptions;\r\n  contactDataList: EmployeeContactData[];\r\n  contactListObserver: Observable<string>;\r\n  updateListSrc : BehaviorSubject<string>;\r\n  \r\n  constructor(private http: Http) {\r\n    this.headers = new Headers();\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.options = new RequestOptions({ headers: this.headers });\r\n    this.updateListSrc = new BehaviorSubject('UpdateOperation');\r\n    this.contactListObserver = this.updateListSrc.asObservable();\r\n  }\r\n  updateCompleted(msg : any){\r\n    this.updateListSrc.next(msg);\r\n  }\r\n  getContactInfo(): Observable<EmployeeContactData[]> {\r\n    return this.http.get(endpoints.contactList, this.options).pipe(\r\n      map((res: Response) => res.json()),\r\n    );\r\n\r\n  }\r\n  //update contact\r\n  updateContactInfo(contactData: EmployeeContactData): Observable<any> {\r\n    return this.http.put(endpoints.contact, contactData).pipe(\r\n      map((res: Response) => res.json()),\r\n    );\r\n\r\n  }\r\n\r\n  //Add new contact\r\n  addContact(contactData: EmployeeContactData): Observable<any> {\r\n    console.log(contactData);\r\n    return this.http.post(endpoints.contact, contactData, this.options).pipe(\r\n      map((res: Response) => res.json()),\r\n    );\r\n  }\r\n  //setContactInfo\r\n  setContactInfo(contactData: EmployeeContactData[]) {\r\n    this.contactInfo = contactData;\r\n  }\r\n  //remove record\r\n  deleteContact(id: string): Observable<any> {\r\n    console.log(\"id\",id);\r\n    return this.http.delete(endpoints.contact+`/${id}`,this.options);\r\n   //.pipe(\r\n    //  map((res:Response)=>res.json()),\r\n   // );\r\n  }\r\n  //Get Contact by id\r\n  getContactById(id: string): EmployeeContactData {\r\n    let foundContact: EmployeeContactData;\r\n    console.log(id);\r\n    this.contactInfo.map((contactItem) => {\r\n\r\n      if (contactItem['_id']['$oid'] == id) {\r\n        console.log(contactItem);\r\n        foundContact = contactItem;\r\n      }\r\n    });\r\n    return foundContact;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard-container col-md-1\\\">\\r\\n    \\r\\n  <mat-tab-group color=\\\"primary\\\" backgroundColor=\\\"accent\\\">\\r\\n        <mat-tab label=\\\"Contact List\\\" >\\r\\n          <ng-template matTabContent>\\r\\n            <app-contact-view></app-contact-view>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Add Contact\\\">\\r\\n          <ng-template matTabContent>            \\r\\n            <app-newcontact></app-newcontact>\\r\\n          </ng-template>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private listId = 'CONTACT_COMPONENT_LIST';\r\n  private editId = 'CONTACT_COMPONENT_EDIT';\r\n  constructor(private http:Http) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n \r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"edit-dialog-container\\\">\\n<h1 mat-dialog-title>Edit Contact</h1>\\n<div mat-dialog-content>\\n  <div class=\\\"edit-contact-container\\\">\\n    <form [formGroup]=\\\"contactDetailsForm\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" >\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Contact No\\\" formControlName=\\\"contactNo\\\">\\n      </mat-form-field>\\n\\n   <!--   <mat-form-field>\\n        <input matInput placeholder=\\\"Department\\\" formControlName=\\\"department\\\">\\n      </mat-form-field>-->\\n      <mat-form-field>\\n      <mat-select placeholder=\\\"Select\\\" formControlName=\\\"status\\\">\\n        <mat-option value=\\\"active\\\">Active</mat-option>\\n        <mat-option value=\\\"inactive\\\">Inactive</mat-option>\\n      </mat-select>\\n      </mat-form-field>\\n      </form>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-raised-button (click)=\\\"closeDialog()\\\">Cancel</button>\\n  <button mat-raised-button [mat-dialog-close]=\\\"data.name\\\" (click)=\\\"saveEditedContact(contactDetailsForm.value)\\\" cdkFocusInitial>Save</button>\\n</div>\\n</div>\"","import { Component, OnInit, Inject} from '@angular/core';\r\nimport { ContactinfoService } from '../contactinfo.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatFormFieldControl, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { EmployeeContactData } from '../model/employee.contact';\r\n\r\n@Component({\r\n  selector: 'app-edit-contact-dialog',\r\n  templateUrl: './edit-contact-dialog.component.html',\r\n  styleUrls: ['./edit-contact-dialog.component.css'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: EditContactDialogComponent }],\r\n})\r\nexport class EditContactDialogComponent implements OnInit {\r\n  contactDetailsForm: FormGroup;\r\n  prevContactData: EmployeeContactData;\r\n  updateCompleted:boolean;\r\n \r\n  constructor(private contactInfoService: ContactinfoService, public dialogRef: MatDialogRef<EditContactDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: EmployeeContactData) {\r\n    this.contactDetailsForm = new FormGroup({\r\n      firstName: new FormControl(data.firstName),\r\n      lastName: new FormControl(data.lastName),\r\n      contactNo: new FormControl(data.contactNo),\r\n      email: new FormControl(data.email),\r\n      //   department: new FormControl(),\r\n      status: new FormControl(data.status)\r\n    });\r\n    this.prevContactData = data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  //save edited data\r\n  saveEditedContact(contact: EmployeeContactData): void {\r\n    console.log(\"Edited Contact:\", contact);\r\n    if (this.compareContactDetails(contact)) {\r\n      contact._id = this.prevContactData._id;\r\n      this.contactInfoService.updateContactInfo(contact).subscribe(\r\n        data => {\r\n          console.log(\"Update success:\", data);\r\n          this.contactInfoService.updateCompleted(data);\r\n         \r\n        }, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });;\r\n    \r\n    }\r\n    console.log(\"Record edited:\" + this.compareContactDetails(contact));\r\n\r\n  }\r\n  //Check id object being edited\r\n  compareContactDetails(newContactData: EmployeeContactData): boolean {\r\n    let editFlag: boolean = false;\r\n    for (var key in this.prevContactData) {\r\n      var result = \"\";\r\n      if (this.prevContactData.hasOwnProperty(key) && key != '_id') {\r\n        if (this.prevContactData[key] != newContactData[key]) {\r\n          editFlag = true;\r\n        }\r\n      }\r\n    }\r\n    return editFlag;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.container-login {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .container-login > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-card-content{\\r\\n    padding: 5%;\\r\\n  }\\r\\n  \\r\\n  mat-form-field{\\r\\n    padding: 2%;\\r\\n  }\\r\\n  \\r\\n  form{\\r\\n    margin: 0% 15% 0% 15%;\\r\\n  }\\r\\n  \\r\\n  .container-login{\\r\\n    padding: 0%;\\r\\n    margin: 0 10% 0 0%;\\r\\n   }\\r\\n  \\r\\n  @media(min-width: 600px) {\\r\\n    .container-login{\\r\\n      padding: 0%;\\r\\n      margin: 0 15% 0 15%;\\r\\n     }\\r\\n  }\\r\\n  \\r\\n  @media(max-width: 300px) {\\r\\n    .container-login{\\r\\n      padding: 0%;\\r\\n      margin: 0 15% 0 15%;\\r\\n     }\\r\\n  }\"","module.exports = \"<div class=\\\"container-login \\\">\\r\\n    <mat-card>\\r\\n        <mat-card-title >\\r\\n          <h4>Sign In</h4>\\r\\n        </mat-card-title>\\r\\n        <mat-card-content class=\\\"mat-elevation-z8\\\">\\r\\n      <form [formGroup]=\\\"loginForm\\\" >\\r\\n      <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" class=\\\"example-right-align\\\" formControlName=\\\"username\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"password\\\" formControlName=\\\"password\\\">    </mat-form-field>\\r\\n        <div mat-dialog-actions>\\r\\n          <button mat-raised-button  (click)=\\\"authenticate(loginForm.value)\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n        </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n      </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport { MatFormFieldControl } from '@angular/material';\r\nimport { FormControl, FormGroup ,Validators} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: LoginComponent }],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  returnUrl: string;\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService:AuthenticationService) { \r\n      this.loginForm = new FormGroup({\r\n        username: new FormControl('',[Validators.required]),\r\n        password: new FormControl('',[Validators.required]),\r\n      });\r\n  //  this.hide=true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.logout();\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\r\n  }\r\n\r\n  authenticate(loginData ){\r\n    console.log(loginData);\r\n    this.loading = true;\r\n    this.authService.login(loginData.username,loginData.password).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        if (data && data[\"token\"]) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify(data));\r\n        }\r\n        this.authService.changeAuthStatus(true);\r\n        this.router.navigate([this.returnUrl]);\r\n    },\r\n    error => {\r\n       // this.alertService.error(error);\r\n       console.log(error); \r\n       this.loading = false;\r\n    }\r\n    );\r\n  }\r\n\r\n  getErrorMessage(){\r\n    return \"Incorrect EmailId\";\r\n  }\r\n\r\n}\r\n","export class EmployeeContactData {\r\n    _id: any;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    contactNo: number;\r\n    status: string;\r\n\r\n    constructor(id: any,\r\n        firstName: string,\r\n        lastName: string,\r\n        email: string,\r\n        contactNo: number,\r\n        status: string, ) {\r\n        this._id = id;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.contactNo = contactNo;\r\n        this.status = status;\r\n    }\r\n\r\n\r\n}","module.exports = \".example-container {\\r\\n    display: table;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-form-field{\\r\\n    padding: 2%;\\r\\n  }\\r\\n  \\r\\n  @media(min-width: 600px) {\\r\\n    .new-contact-container{\\r\\n      padding: 5% 20% 0 16%;\\r\\n     }\\r\\n  }\\r\\n \"","module.exports = \"<div class=\\\"new-contact-container\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-title>\\r\\n      Create New Contact\\r\\n    </mat-card-title>\\r\\n    <mat-card-content >\\r\\n      <div class=\\\"example-container\\\">\\r\\n        <form [formGroup]=\\\"contactDetailsForm\\\">\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" >\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Contact No\\\" formControlName=\\\"contactNo\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Department\\\" formControlName=\\\"department\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Select\\\" formControlName=\\\"status\\\">\\r\\n            <mat-option value=\\\"active\\\">Active</mat-option>\\r\\n            <mat-option value=\\\"inactive\\\">Inactive</mat-option>\\r\\n          </mat-select>\\r\\n          </mat-form-field>\\r\\n          </form>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button (click)=\\\"contactDetailsForm.reset()\\\">\\r\\n        Clear\\r\\n      </button>\\r\\n      <button mat-raised-button (click)=\\\"addContact(contactDetailsForm.value)\\\" [disabled]=\\\"!contactDetailsForm.valid\\\">\\r\\n        Save\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n    <mat-card-footer>\\r\\n      Contact Added Successfully\\r\\n    </mat-card-footer>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup ,Validators, PatternValidator } from '@angular/forms';\r\nimport { ContactinfoService } from '../contactinfo.service';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-newcontact',\r\n  templateUrl: './newcontact.component.html',\r\n  styleUrls: ['./newcontact.component.css']\r\n})\r\n\r\nexport class NewcontactComponent implements OnInit {\r\n  contactDetailsForm;\r\n  constructor(private contactInfoService: ContactinfoService,public snackBar: MatSnackBar) { \r\n    this.contactDetailsForm = new FormGroup({\r\n      firstName: new FormControl('',[Validators.required,Validators.minLength(1)]),\r\n      lastName: new FormControl('',[Validators.required,Validators.minLength(1)]),\r\n      contactNo: new FormControl('',[Validators.required,Validators.minLength(10),Validators.maxLength(10),Validators.pattern('[0-9]*')]),\r\n      email: new FormControl('',[Validators.required]),\r\n      department: new FormControl('',[Validators.required]),\r\n      status: new FormControl('',[Validators.required])\r\n   });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addContact(newContact) {\r\n    console.log(this.contactDetailsForm);\r\n    \r\n    this.contactInfoService.addContact(newContact).subscribe((res) => {\r\n         this.openSnackBar(\"New Contact Added\",\"OK\");\r\n        console.log(res);\r\n    });\r\n   \r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","//import './polyfills';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}